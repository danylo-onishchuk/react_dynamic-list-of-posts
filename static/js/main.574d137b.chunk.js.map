{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","components/Header/Header.jsx","App.jsx","api/users.js","index.js"],"names":["BASE_URL","getUserPosts","fetch","then","response","json","result","data","PostsList","selector","setDetailsVisible","setPostId","useState","posts","setPosts","value","setValue","useEffect","filter","post","userId","title","map","open","closeAll","forEach","className","key","id","type","hidden","onClick","NewCommentForm","postId","name","setName","email","setEmail","body","setBody","onSubmit","e","preventDefault","method","JSON","stringify","addPostComment","current","onChange","target","placeholder","PostDetails","postNow","setPostNow","comments","setComments","commentsVisible","setCommentsVisible","getPostDetails","comment","length","commentId","Header","setSelector","users","user","App","setUsers","detailsVisible","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.574d137b.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport function getUserPosts() {\n  return fetch(`${BASE_URL}/posts`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getPostDetails(postId) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","/* eslint-disable no-param-reassign */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({ selector, setDetailsVisible, setPostId }) => {\n  const [posts, setPosts] = useState([]);\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    if (selector === 'All users' || selector === '') {\n      getUserPosts()\n        .then(result => result.filter(post => post.userId !== null))\n        .then(result => result.filter(post => post.title !== null))\n        .then(result => setPosts(result.map(post => ({\n          ...post,\n          open: false,\n        }))));\n    } else {\n      getUserPosts()\n        .then(result => result.filter(post => post.userId === +selector))\n        .then(result => result.filter(post => post.userId !== null))\n        .then(result => result.filter(post => post.title !== null))\n        .then(result => setPosts(result));\n    }\n  }, [selector]);\n\n  const closeAll = () => {\n    posts.forEach(post => (post.open = false));\n    setValue(value + 1);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                User #\n                {post.userId}\n                :\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              hidden={post.open}\n              onClick={() => {\n                closeAll();\n                post.open = !post.open;\n                setPostId(post.id);\n                setDetailsVisible(false);\n              }}\n            >\n              Open\n            </button>\n            <button\n              type=\"button\"\n              hidden={!post.open}\n              className=\"PostsList__button button active\"\n              onClick={() => {\n                closeAll();\n                setDetailsVisible(true);\n                setPostId(0);\n              }}\n            >\n              Close\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  selector: PropTypes.string.isRequired,\n  setDetailsVisible: PropTypes.func.isRequired,\n  setPostId: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nimport { addPostComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId, setValue, value }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        addPostComment(postId, name, email, body);\n        setName('');\n        setEmail('');\n        setBody('');\n        setValue(current => current + 1);\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={e => setBody(e.target.value)}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport function getPostComments() {\n  return fetch(`${BASE_URL}/comments`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function deletePostComment(commentId) {\n  fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n}\n\nexport function addPostComment(postId, name, email, body) {\n  fetch(`${BASE_URL}/comments`, {\n    method: 'post',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deletePostComment } from '../../api/comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [postNow, setPostNow] = useState({});\n  const [comments, setComments] = useState([]);\n  const [commentsVisible, setCommentsVisible] = useState(false);\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    if (postId !== 0) {\n      getPostDetails(postId)\n        .then(result => setPostNow(result));\n\n      getPostComments()\n        .then(result => result.filter(comment => comment.postId === postId))\n        .then(result => setComments(result));\n    }\n  }, [postId, value]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>\n          { postNow.body }\n        </p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          hidden={commentsVisible}\n          onClick={() => setCommentsVisible(true)}\n        >\n          Hide\n          &nbsp;\n          {comments.length}\n          &nbsp;\n          comments\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          hidden={!commentsVisible}\n          onClick={() => setCommentsVisible(false)}\n        >\n          Show\n          &nbsp;\n          {comments.length}\n          &nbsp;\n          comments\n        </button>\n\n        <ul className=\"PostDetails__list\" hidden={commentsVisible}>\n          {comments.map(comment => (\n            <li className=\"PostDetails__list-item\" key={comment.id}>\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => {\n                  deletePostComment(comment.id);\n                  setValue(value + 1);\n                }}\n              >\n                X\n              </button>\n              <p>\n                {comment.body}\n              </p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            setValue={setValue}\n            value={value}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Header = ({ selector, setSelector, users }) => (\n  <header className=\"App__header\">\n    <label>\n      Select a user: &nbsp;\n      <select\n        className=\"App__user-selector\"\n        value={selector}\n        onChange={e => setSelector(e.target.value)}\n      >\n        <option value=\"All users\">All users</option>\n        {users.map(user => (\n          <option value={user.id} key={user.id}>{user.name}</option>\n        ))}\n      </select>\n    </label>\n  </header>\n);\n\nHeader.propTypes = {\n  selector: PropTypes.string.isRequired,\n  setSelector: PropTypes.func.isRequired,\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/users';\nimport { Header } from './components/Header';\n\nconst App = () => {\n  const [selector, setSelector] = useState('');\n  const [users, setUsers] = useState([]);\n  const [detailsVisible, setDetailsVisible] = useState(true);\n  const [postId, setPostId] = useState(0);\n\n  useEffect(() => {\n    getUsers()\n      .then(result => result.filter(user => user.name !== null))\n      .then(result => setUsers(result));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header\n        selector={selector}\n        setSelector={setSelector}\n        users={users}\n      />\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selector={selector}\n            setDetailsVisible={setDetailsVisible}\n            setPostId={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content \" hidden={detailsVisible}>\n          <PostDetails postId={postId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { BASE_URL } from './api';\n\nexport function getUsers() {\n  return fetch(`${BASE_URL}/users`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}